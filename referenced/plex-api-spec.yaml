openapi: 3.1.0
info:
  title: Plex-API
  summary: A Plex Media Server API Map
  description: An Open API Spec for interacting with Plex.tv and Plex Servers
  version: 0.0.3
  contact:
    name: Luke Hagar
    url: "https://www.LukeHagar.com"
    email: Lukeslakemail@gmail.com
  license:
    name: MIT
    identifier: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: "http://{Local IP}:{Port}"
    variables:
      Local IP:
        default: "10.10.10.47"
        description: The Local IP Address of your plex server
      Port:
        default: "32400"
        description: The port to access your plex server
  - url: "https://{Local IP}:{Port}"
    variables:
      Local IP:
        default: "10.10.10.47"
        description: The Local IP Address of your plex server
      Port:
        default: "32400"
        description: The port to access your plex server

security:
  - Token: []
    ClientIdentifier: []
    Host: []
    DeviceName: []

components:
  securitySchemes:
    Token: # arbitrary name for the security scheme
      description: Plex Authentication Token
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Token # name of the header, query parameter or cookie
    ClientIdentifier: # arbitrary name for the security scheme
      description: Plex Authentication Token
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Client-Identifier # name of the header, query parameter or cookie
    Host: # arbitrary name for the security scheme
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: Host # name of the header, query parameter or cookie
    DeviceName: # arbitrary name for the security scheme
      description: Primary name for the device eg. `Plex Web (Chrome)`
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Device-Name # name of the header, query parameter or cookie

paths:
  # Plex Media Server endpoints

  /:
    $ref: "./paths/pms/root.yaml"
  /clients:
    $ref: "./paths/pms/clients.yaml"
  /activities:
    $ref: "./paths/pms/activities.yaml"
  /activities/{activityUUID}:
    $ref: "./paths/pms/activities-cancel.yaml"
  /updater/status:
    $ref: "./paths/pms/updater-status.yaml"
  /updater/check:
    $ref: "./paths/pms/updater-check.yaml"
  /updater/apply:
    $ref: "./paths/pms/updater-apply.yaml"
  /butler:
    $ref: "./paths/pms/butler.yaml"
  /butler/{taskName}:
    $ref: "./paths/pms/butler-task.yaml"
  /log:
    $ref: "./paths/pms/log.yaml"
  /log/networked:
    $ref: "./paths/pms/log-networked.yaml"
  /security/token:
    $ref: "./paths/pms/security-token.yaml"
  /security/resources:
    $ref: "./paths/pms/security-resources.yaml"
  /library/sections/{sectionId}/all:
    $ref: "./paths/pms/library-content-all.yaml"
  /library/sections/{sectionId}/refresh:
    $ref: "./paths/pms/library-refresh.yaml"
  /library/sections/{sectionId}/latest:
    $ref: "./paths/pms/library-content-latest.yaml"
  /library/sections/{sectionId}/common:
    $ref: "./paths/pms/library-content-common.yaml"
  /library/sections/{sectionId}:
    $ref: "./paths/pms/library-details.yaml"
  /library/sections:
    $ref: "./paths/pms/all-libraries.yaml"
  /library/hashes:
    $ref: "./paths/pms/library-hashes.yaml"
  /library/onDeck:
    $ref: "./paths/pms/library-ondeck.yaml"
  /hubs:
    $ref: "./paths/pms/hubs.yaml"
  /hubs/sections/{sectionId}:
    $ref: "./paths/pms/hubs-section.yaml"
  /playlists/all:
    $ref: "./paths/pms/all-playlists.yaml"
  /playlists:
    $ref: "./paths/pms/playlists.yaml"
  /playlists/{playlistID}:
    $ref: "./paths/pms/playlist-id.yaml"
  /playlists/{playlistID}/items:
    $ref: "./paths/pms/playlist-contents.yaml"
  /playlists/upload:
    $ref: "./paths/pms/playlist-upload.yaml"
  /hubs/search:
    $ref: "./paths/pms/hubs-search.yaml"
  /hubs/search/voice:
    $ref: "./paths/pms/hubs-search-voice.yaml"
  /status/sessions:
    $ref: "./paths/pms/sessions.yaml"
  /status/sessions/history/all:
    $ref: "./paths/pms/session-history.yaml"
  /:/prefs:
    $ref: "./paths/pms/server-preferences.yaml"

  # Plex.tv API endpoints

  /user:
    servers:
      - url: https://plex.tv/api/v2
    $ref: "./paths/plex.tv/user.yaml"
  /resources:
    servers:
      - url: https://plex.tv/api/v2
    $ref: "./paths/plex.tv/resources.yaml"
  /pins:
    servers:
      - url: https://plex.tv/api/v2
    $ref: "./paths/plex.tv/pins.yaml"
  /pins/{pinID}:
    servers:
      - url: https://plex.tv/api/v2
    $ref: "./paths/plex.tv/pins-id.yaml"

tags:
  - name: Activities
    description: |
      Activities are awesome. They provide a way to monitor and control asynchronous operations on the server. In order to receive real-time updates for activities, a client would normally subscribe via either EventSource or Websocket endpoints.
      Activities are associated with HTTP replies via a special `X-Plex-Activity` header which contains the UUID of the activity.
      Activities are optional cancellable. If cancellable, they may be cancelled via the `DELETE` endpoint. Other details:
      - They can contain a `progress` (from 0 to 100) marking the percent completion of the activity.
      - They must contain an `type` which is used by clients to distinguish the specific activity.
      - They may contain a `Context` object with attributes which associate the activity with various specific entities (items, libraries, etc.)
      - The may contain a `Response` object which attributes which represent the result of the asynchronous operation.
  - name: Authentication
    description: |
      API Calls regarding authentication for Plex Media Server
  - name: Butler
    description: |
      Butler is the task manager of the Plex Media Server Ecosystem.
  - name: Server
    description: |
      Operations against the Plex Media Server System.
  - name: Updater
    description: |
      This describes the API for searching and applying updates to the Plex Media Server.
      Updates to the status can be observed via the Event API.
  - name: Log
    description: |
      Submit logs to the Log Handler for Plex Media Server
  - name: Security
    description: |
      API Calls against Security for Plex Media Server
  - name: Library
    description: |
      API Calls interacting with Plex Media Server Libraries
  - name: Hubs
    description: |
      Hubs are a structured two-dimensional container for media, generally represented by multiple horizontal rows.
  - name: Playlists
    description: |
      Playlists are ordered collections of media. They can be dumb (just a list of media) or smart (based on a media query, such as "all albums from 2017"). 
      They can be organized in (optionally nesting) folders.
      Retrieving a playlist, or its items, will trigger a refresh of its metadata. 
      This may cause the duration and number of items to change.
  - name: Search
    description: |
      API Calls that perform search operations with Plex Media Server
  - name: User
    description: |
      API Calls that perform operations with Plex Media Server Users
